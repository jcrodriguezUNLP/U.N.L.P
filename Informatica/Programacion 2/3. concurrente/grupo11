programa ejer1
procesos
  proceso incrementar( ES x : numero )
  comenzar
    x := ( x + 1 )
  fin
  
  proceso decrementar( ES x : numero )
  comenzar
    x := ( x - 1 )
  fin

  proceso girar( ES direccionActual : numero ; E giros : numero )
  comenzar
    repetir( giros )
      derecha
      si( direccionActual < 3 )
        incrementar( direccionActual )
      sino
        direccionActual := 0
  fin
  
  proceso reiniciarDireccion( ES direccionActual : numero )
  comenzar
    si( direccionActual <> 0 )
      girar( direccionActual , (4 - direccionActual) )
  fin
  
  proceso cambiarDireccion( ES direccionActual : numero ; E nuevaDireccion : numero )
  comenzar
    mientras( direccionActual <> nuevaDireccion )
      girar( direccionActual , 1 )
  fin

  proceso caminarLinea( E largo : numero ; E direccionActual : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
  fin
  
  proceso agarrarFlor( ES cantFlores : numero )
  comenzar
    si( HayFlorEnLaEsquina )
      tomarFlor
      incrementar( cantFlores )
  fin

  proceso agarrarPapel( ES cantPapeles : numero )
  comenzar
    si( HayPapelEnLaEsquina )
      tomarPapel
      incrementar( cantPapeles )
  fin

  proceso tomarFlores( ES cantFlores : numero )
  comenzar
    mientras( HayFlorEnLaEsquina )
      tomarFlor
      incrementar( cantFlores )
  fin
  
  proceso tomarPapeles( ES cantPapeles : numero )
  comenzar
    mientras( HayPapelEnLaEsquina )
      tomarPapel
      incrementar( cantPapeles )
  fin
  
  proceso limpiarEsquina( ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    tomarFlores  ( cantFlores  )
    tomarPapeles ( cantPapeles )
  fin
  
  proceso tomarFloresLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        tomarFlores( cantFlores )
        AvAnterior := PosAv
        CaAnterior := PosCa
        mover
    sino
      si( direccionActual = 1 )
        repetir( largo )
          tomarFlores( cantFlores )
          AvAnterior := PosAv
          CaAnterior := PosCa
          mover
      sino
        si( direccionActual = 2 )
          repetir( largo )
            tomarFlores( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            mover
        sino
          repetir( largo )
            tomarFlores( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            mover
    tomarFlores( cantFlores )
  fin

  proceso tomarPapelesLinea( E largo : numero ; E direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        tomarPapeles( cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          tomarPapeles( cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            tomarPapeles( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            tomarPapeles( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    tomarPapeles( cantPapeles )
  fin
  
  proceso limpiarLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        limpiarEsquina( cantFlores , cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          limpiarEsquina( cantFlores , cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            limpiarEsquina( cantFlores , cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            limpiarEsquina( cantFlores , cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    limpiarEsquina( cantFlores , cantPapeles )
  fin

  proceso dejarFlor( ES cantFlores : numero )
  comenzar
    si( HayFlorEnLaBolsa )
      dejarFlor
      decrementar( cantFlores )
  fin

  proceso dejarPapel( ES cantPapeles : numero )
  comenzar
    si( HayPapelEnLaBolsa )
      depositarPapel
      decrementar( cantPapeles )
  fin

  proceso dejarFlores( ES cantFlores : numero )
  comenzar
    mientras( HayFlorEnLaBolsa )
      dejarFlor
      decrementar( cantFlores )
  fin

  proceso dejarPapeles( ES cantPapeles : numero )
  comenzar
    mientras( HayPapelEnLaBolsa )
      dejarPapel
      decrementar( cantPapeles )
  fin

  proceso vaciarBolsa( ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    dejarFlores( cantFlores )
    dejarPapeles( cantPapeles )
  fin

  proceso dejarFloresLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        dejarFlores( cantFlores )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          dejarFlores( cantFlores )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            dejarFlores( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            dejarFlores( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    dejarFlores( cantFlores )
  fin

  proceso dejarPapelesLinea( E largo : numero ; E direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        dejarPapeles( cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          dejarPapeles( cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            dejarPapeles( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            dejarPapeles( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    dejarPapeles( cantPapeles )
  fin

  proceso vaciarBolsaLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        vaciarBolsa( cantFlores , cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          vaciarBolsa( cantFlores , cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            vaciarBolsa( cantFlores , cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            vaciarBolsa( cantFlores , cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    vaciarBolsa( cantFlores , cantPapeles )
  fin

  proceso tomarFloresPerimetro(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    tomarFloresLinea( alto , direccionActual , cantFlores )
    girar( direccionActual , 1 )

    tomarFloresLinea( ancho , direccionActual , cantFlores )
    girar( direccionActual , 1 )

    tomarFloresLinea( alto , direccionActual , cantFlores )
    girar( direccionActual , 1 )

    tomarFloresLinea( ancho , direccionActual , cantFlores )
  fin

  proceso tomarPapelesPerimetro(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    tomarPapelesLinea( alto , direccionActual , cantPapeles )
    girar( direccionActual , 1 )

    tomarPapelesLinea( ancho , direccionActual , cantPapeles )
    girar( direccionActual , 1 )

    tomarPapelesLinea( alto , direccionActual , cantPapeles )
    girar( direccionActual , 1 )

    tomarPapelesLinea( ancho , direccionActual , cantPapeles )
  fin

  proceso limpiarPerimetro(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    limpiarLinea( alto , direccionActual , cantFlores , cantPapeles )
    girar( direccionActual , 1 )

    limpiarLinea( ancho , direccionActual , cantFlores , cantPapeles )
    girar( direccionActual , 1 )

    limpiarLinea( alto , direccionActual , cantFlores , cantPapeles )
    girar( direccionActual , 1 )

    limpiarLinea( ancho , direccionActual , cantFlores , cantPapeles )
  fin

  proceso tomarFloresRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      tomarFloresLinea( alto , direccionActual , cantFlores )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso tomarPapelesRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      tomarPapelesLinea( alto , direccionActual , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso limpiarRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      limpiarLinea( alto , direccionActual , cantFlores , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso dejarFloresRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      dejarFloresLinea( alto , direccionActual , cantFlores )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso dejarPapelesRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      dejarPapelesLinea( alto , direccionActual , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso vaciarBolsaRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      vaciarBolsaLinea( alto , direccionActual , cantFlores , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso tomarFloresEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
  fin

  proceso tomarPapelesEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
  fin

  proceso limpiarEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 1 )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 3 )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 1 )
  fin

  proceso tomarFloresEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    repetir( escalones )
      tomarFloresEscalon( largo , SENTIDO_HORARIO , direccionActual , cantFlores )
      largo := ( largo + incrementar )
  fin

  proceso tomarPapelesEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      tomarPapelesEscalon( largo , SENTIDO_HORARIO , direccionActual , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso limpiarEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      limpiarEscalon( largo , SENTIDO_HORARIO , direccionActual , cantFlores , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso dejarFloresEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
  fin

  proceso dejarPapelesEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
  fin

  proceso vaciarBolsaEscalon(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      vaciarBolsaLinea( largo , direccionActual , cantFlores , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso dejarPapelesEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      dejarPapelesEscalon( largo , SENTIDO_HORARIO , direccionActual , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso dejarFloresEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    repetir( escalones )
      dejarFloresEscalon( largo , SENTIDO_HORARIO , direccionActual , cantFlores )
      largo := ( largo + incrementar )
  fin

  proceso vaciarBolsaEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      vaciarBolsaLinea( largo , direccionActual , cantFlores , cantPapeles )
      largo := ( largo + incrementar )
  fin

areas
  Lado1A : AreaP ( 1 , 1 , 1 , 11 )
  Lado2A : AreaP ( 2 , 11 , 11 , 11 )
  Lado3A : AreaP ( 11 , 1 , 11 , 10 )
  Lado4A : AreaP ( 2 , 1 , 10 , 1 )
  Lado1B : AreaP ( 20 , 1 , 20 , 11 )
  Lado2B : AreaP ( 21 , 11 , 30 , 11 )
  Lado3B : AreaP ( 30 , 1 , 30 , 10 )
  Lado4B : AreaP ( 21 , 1 , 29 , 1 )
  deposito : AreaPC( 20 , 20 , 20 , 20 )
  oficina : AreaP ( 1 , 100 , 1 , 100 )
  carrera : AreaPC ( 1 , 50 , 100 , 50 )
  papelera : AreaPC ( 100 , 100 , 100 , 100 )

robots
  robot papeleroArribaA
  variables
    cantFlores : numero
    direccionActual : numero
    TERMINE : boolean
    AvAnterior : numero
    CaAnterior : numero
    id : numero
    cantPapeles : numero
    GANE : boolean
  comenzar
    RecibirMensaje( id , fiscalizador )
    direccionActual := 0
    tomarFloresLinea( 10 , direccionActual , cantFlores )
    girar( direccionActual , 1 )
    tomarFloresLinea( 10 , direccionActual , cantFlores )
    EnviarMensaje( TERMINE , papelero2 )
    AvAnterior := PosAv
    CaAnterior := PosCa
    EnviarMensaje( id , fiscalizador )
    EnviarMensaje( cantFlores , fiscalizador )
    mientras( HayFlorEnLaBolsa )
      BloquearEsquina( 20 , 20 )
      Pos( 20 , 20)
      depositarFlor
      Pos( AvAnterior , CaAnterior )
      LiberarEsquina( 20 , 20 )
    RecibirMensaje( GANE , fiscalizador )
    si( GANE )
      BloquearEsquina( 100 , 100 )
      Pos( 100 , 100 )
      repetir( 50 )
        agarrarPapel( cantPapeles )
      BloquearEsquina( 1 , 50 )
      Pos( 1 , 50 )
      cambiarDireccion( direccionActual , 1 )
      
  fin
  
  robot papeleroAbajoA
  variables
    cantFlores : numero
    direccionActual : numero
    TERMINE : boolean
    AvAnterior : numero
    CaAnterior : numero
    id : numero
    cantPapeles : numero
    GANE : boolean
  comenzar
    RecibirMensaje( id , fiscalizador )
    direccionActual := 0
    girar( direccionActual , 2 )
    RecibirMensaje( TERMINE , papelero1 )
    tomarFloresLinea( 9 , direccionActual , cantFlores )
    girar( direccionActual , 1 )
    tomarFloresLinea( 9 , direccionActual , cantFlores )
    AvAnterior := PosAv
    CaAnterior := PosCa
    EnviarMensaje( id , fiscalizador)
    EnviarMensaje( cantFlores , fiscalizador )
    mientras( HayFlorEnLaBolsa )
      BloquearEsquina( 20 , 20 )
      Pos( 20 , 20 )
      depositarFlor
      Pos( AvAnterior , CaAnterior )
      LiberarEsquina( 20 , 20 )
    RecibirMensaje( GANE , fiscalizador )
    si( GANE )
      BloquearEsquina( 100 , 100 )
      Pos( 100 , 100 )
      repetir( 50 )
        agarrarPapel( cantPapeles )
      BloquearEsquina( 1 , 50 )
      Pos( 1 , 50 )
      cambiarDireccion( direccionActual , 1 )
  fin
  
  robot papeleroArribaB
  variables
    cantFlores : numero
    direccionActual : numero
    TERMINE : boolean
    AvAnterior : numero
    CaAnterior : numero
    id : numero
    cantPapeles : numero
    GANE : boolean
  comenzar
    RecibirMensaje( id , fiscalizador )
    direccionActual := 0
    tomarFloresLinea( 10 , direccionActual , cantFlores )
    girar( direccionActual , 1 )
    tomarFloresLinea( 10 , direccionActual , cantFlores )
    EnviarMensaje( TERMINE , papelero4 )
    AvAnterior := PosAv
    CaAnterior := PosCa
    EnviarMensaje( id , fiscalizador)
    EnviarMensaje( cantFlores , fiscalizador )
    mientras( HayFlorEnLaBolsa )
      BloquearEsquina( 20 , 20 )
      Pos( 20 , 20)
      depositarFlor
      Pos( AvAnterior , CaAnterior )
      LiberarEsquina( 20 , 20 )
    RecibirMensaje( GANE , fiscalizador )
    si( GANE )
      BloquearEsquina( 100 , 100 )
      Pos( 100 , 100 )
      repetir( 50 )
        agarrarPapel( cantPapeles )
      BloquearEsquina( 1 , 50 )
      Pos( 1 , 50 )
      cambiarDireccion( direccionActual , 1 )
  fin
  
  robot papeleroAbajoB
  variables
    cantFlores : numero
    direccionActual : numero
    TERMINE : boolean
    AvAnterior : numero
    CaAnterior : numero
    id : numero
    cantPapeles : numero
    GANE : boolean
  comenzar
    RecibirMensaje( id , fiscalizador )
    direccionActual := 0
    girar( direccionActual , 2 )
    RecibirMensaje( TERMINE , papelero3 )
    tomarFloresLinea( 9 , direccionActual , cantFlores )
    girar( direccionActual , 1 )
    tomarFloresLinea( 9 , direccionActual , cantFlores )
    AvAnterior := PosAv
    CaAnterior := PosCa
    EnviarMensaje( id , fiscalizador)
    EnviarMensaje( cantFlores , fiscalizador )
    mientras( HayFlorEnLaBolsa )
      BloquearEsquina( 20 , 20 )
      Pos( 20 , 20)
      depositarFlor
      Pos( AvAnterior , CaAnterior )
      LiberarEsquina( 20 , 20 )
    RecibirMensaje( GANE , fiscalizador )
    si( GANE )
      BloquearEsquina( 100 , 100 )
      Pos( 100 , 100 )
      repetir( 50 )
        agarrarPapel( cantPapeles )
      BloquearEsquina( 1 , 50 )
      Pos( 1 , 50 )
      cambiarDireccion( direccionActual , 1 )
  fin
  
  robot TFiscalizador
  variables
    id : numero
    cantFlores : numero
    cantFloresA : numero
    cantFloresB : numero
  comenzar
    EnviarMensaje( 1 , papelero1 )
    EnviarMensaje( 2 , papelero2 )
    EnviarMensaje( 3 , papelero3 )
    EnviarMensaje( 4 , papelero4 )
    cantFloresA := 0
    cantFloresB := 0
    repetir( 4 )
      RecibirMensaje( id , * )
      si( id = 1)
        RecibirMensaje( cantFlores , papelero1 )
        cantFloresA := ( cantFloresA + cantFlores )
      sino
        si( id = 2 )
          RecibirMensaje( cantFlores , papelero2 )
          cantFloresA := ( cantFloresA + cantFlores )
        sino
          si( id = 3 )
            RecibirMensaje( cantFlores , papelero3 )
            cantFloresB := ( cantFloresB + cantFlores )
          sino
            RecibirMensaje( cantFlores , papelero4 )
            cantFloresB := ( cantFloresB + cantFlores )
    si( cantFloresA < cantFloresB )
      Informar( 'Equipo ganador B' , cantFloresB )
      GANE := V
      EnviarMensaje( GANE , papelero3 )
      EnviarMensaje( GANE , papelero4 )
      EnviarMensaje( ~GANE , papelero3 )
      EnviarMensaje( GANE , papelero4 )
    sino
      Informar( 'Equipo ganador A' , cantFloresA )
      EnviarMensaje( GANE , papelero3 )
      EnviarMensaje( GANE , papelero4 )
  fin
  

variables
  papelero1 : papeleroArribaA
  papelero2 : papeleroAbajoA
  papelero3 : papeleroArribaB
  papelero4 : papeleroAbajoB
  fiscalizador : TFiscalizador

comenzar
  AsignarArea( papelero1 , Lado1A )
  AsignarArea( papelero1 , Lado2A )
  AsignarArea( papelero1 , deposito )
  AsignarArea( papelero1 , papelera )
  AsignarArea( papelero1 , carrera )
  AsignarArea( papelero2 , Lado3A )
  AsignarArea( papelero2 , Lado4A )
  AsignarArea( papelero2 , deposito )
  AsignarArea( papelero2 , papelera )
  AsignarArea( papelero2 , carrera )
  AsignarArea( papelero3 , Lado1B )
  AsignarArea( papelero3 , Lado2B )
  AsignarArea( papelero3 , deposito )
  AsignarArea( papelero3 , papelera )
  AsignarArea( papelero3 , carrera )
  AsignarArea( papelero4 , Lado3B )
  AsignarArea( papelero4 , Lado4B )
  AsignarArea( papelero4 , deposito )
  AsignarArea( papelero4 , papelera )
  AsignarArea( papelero4 , carrera )
  AsignarArea( fiscalizador , oficina  )
  Iniciar( papelero1 , 1 , 1 )
  Iniciar( papelero2 , 11 , 10)
  Iniciar( papelero3 , 20 , 1 )
  Iniciar( papelero4 , 30 , 10)
  Iniciar( fiscalizador , 1 , 100 )
fin