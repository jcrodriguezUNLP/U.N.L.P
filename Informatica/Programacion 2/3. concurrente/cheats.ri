programa ejer1
procesos
  proceso incrementar( ES x : numero )
  comenzar
    x := ( x + 1 )
  fin
  
  proceso decrementar( ES x : numero )
  comenzar
    x := ( x - 1 )
  fin

  proceso girar( ES direccionActual : numero ; E giros : numero )
  comenzar
    repetir( giros )
      derecha
      si( direccionActual < 3 )
        incrementar( direccionActual )
      sino
        direccionActual := 0
  fin
  
  proceso reiniciarDireccion( ES direccionActual : numero )
  comenzar
    si( direccionActual <> 0 )
      girar( direccionActual , (4 - direccionActual) )
  fin
  
  proceso cambiarDireccion( ES direccionActual : numero ; E nuevaDireccion : numero )
  comenzar
    mientras( direccionActual <> nuevaDireccion )
      girar( direccionActual , 1 )
  fin

  proceso caminarLinea( E largo : numero ; E direccionActual : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
  fin
  
  proceso agarrarFlor( ES cantFlores : numero )
  comenzar
    si( HayFlorEnLaEsquina )
      tomarFlor
      incrementar( cantFlores )
  fin

  proceso agarrarPapel( ES cantPapeles : numero )
  comenzar
    si( HayPapelEnLaEsquina )
      tomarPapel
      incrementar( cantPapeles )
  fin

  proceso tomarFlores( ES cantFlores : numero )
  comenzar
    mientras( HayFlorEnLaEsquina )
      tomarFlor
      incrementar( cantFlores )
  fin
  
  proceso tomarPapeles( ES cantPapeles : numero )
  comenzar
    mientras( HayPapelEnLaEsquina )
      tomarPapel
      incrementar( cantPapeles )
  fin
  
  proceso limpiarEsquina( ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    tomarFlores  ( cantFlores  )
    tomarPapeles ( cantPapeles )
  fin
  
  proceso tomarFloresLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        tomarFlores( cantFlores )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          tomarFlores( cantFlores )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            tomarFlores( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            tomarFlores( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    tomarFlores( cantFlores )
  fin

  proceso tomarPapelesLinea( E largo : numero ; E direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        tomarPapeles( cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          tomarPapeles( cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            tomarPapeles( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            tomarPapeles( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    tomarPapeles( cantPapeles )
  fin
  
  proceso limpiarLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        limpiarEsquina( cantFlores , cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          limpiarEsquina( cantFlores , cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            limpiarEsquina( cantFlores , cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            limpiarEsquina( cantFlores , cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    limpiarEsquina( cantFlores , cantPapeles )
  fin

  proceso dejarFlor( ES cantFlores : numero )
  comenzar
    si( HayFlorEnLaBolsa )
      depositarFlor
      decrementar( cantFlores )
  fin

  proceso dejarPapel( ES cantPapeles : numero )
  comenzar
    si( HayPapelEnLaBolsa )
      depositarPapel
      decrementar( cantPapeles )
  fin

  proceso dejarFlores( ES cantFlores : numero )
  comenzar
    mientras( HayFlorEnLaBolsa )
      depositarFlor
      decrementar( cantFlores )
  fin

  proceso dejarPapeles( ES cantPapeles : numero )
  comenzar
    mientras( HayPapelEnLaBolsa )
      dejarPapel
      decrementar( cantPapeles )
  fin

  proceso vaciarBolsa( ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    dejarFlores( cantFlores )
    dejarPapeles( cantPapeles )
  fin

  proceso dejarFloresLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        dejarFlor( cantFlores )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          dejarFlor( cantFlores )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            dejarFlor( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            dejarFlor( cantFlores )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    dejarFlor( cantFlores )
  fin

  proceso dejarPapelesLinea( E largo : numero ; E direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        dejarPapel( cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          dejarPapel( cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            dejarPapel( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            dejarPapel( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    dejarPapel( cantPapeles )
  fin

  proceso vaciarBolsaLinea( E largo : numero ; E direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvAnterior : numero
    CaAnterior : numero
  comenzar
    si( direccionActual = 0 )
      repetir( largo )
        dejarFlor( cantFlores )
        dejarPapel( cantPapeles )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( PosAv , (PosCa + 1) )
        mover
        LiberarEsquina( AvAnterior , CaAnterior )
    sino
      si( direccionActual = 1 )
        repetir( largo )
          dejarFlor( cantFlores )
          dejarPapel( cantPapeles )
          AvAnterior := PosAv
          CaAnterior := PosCa
          BloquearEsquina( (PosAv + 1) , PosCa )
          mover
          LiberarEsquina( AvAnterior , CaAnterior )
      sino
        si( direccionActual = 2 )
          repetir( largo )
            dejarFlor( cantFlores )
            dejarPapel( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( PosAv , (PosCa - 1) )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
        sino
          repetir( largo )
            dejarFlor( cantFlores )
            dejarPapel( cantPapeles )
            AvAnterior := PosAv
            CaAnterior := PosCa
            BloquearEsquina( (PosAv - 1) , PosCa )
            mover
            LiberarEsquina( AvAnterior , CaAnterior )
    dejarFlor( cantFlores )
    dejarPapel( cantPapeles )
  fin

  proceso tomarFloresPerimetro(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    tomarFloresLinea( alto , direccionActual , cantFlores )
    girar( direccionActual , 1 )

    tomarFloresLinea( ancho , direccionActual , cantFlores )
    girar( direccionActual , 1 )

    tomarFloresLinea( alto , direccionActual , cantFlores )
    girar( direccionActual , 1 )

    tomarFloresLinea( ancho , direccionActual , cantFlores )
  fin

  proceso tomarPapelesPerimetro(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    tomarPapelesLinea( alto , direccionActual , cantPapeles )
    girar( direccionActual , 1 )

    tomarPapelesLinea( ancho , direccionActual , cantPapeles )
    girar( direccionActual , 1 )

    tomarPapelesLinea( alto , direccionActual , cantPapeles )
    girar( direccionActual , 1 )

    tomarPapelesLinea( ancho , direccionActual , cantPapeles )
  fin

  proceso limpiarPerimetro(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    limpiarLinea( alto , direccionActual , cantFlores , cantPapeles )
    girar( direccionActual , 1 )

    limpiarLinea( ancho , direccionActual , cantFlores , cantPapeles )
    girar( direccionActual , 1 )

    limpiarLinea( alto , direccionActual , cantFlores , cantPapeles )
    girar( direccionActual , 1 )

    limpiarLinea( ancho , direccionActual , cantFlores , cantPapeles )
  fin

  proceso tomarFloresRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      tomarFloresLinea( alto , direccionActual , cantFlores )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso tomarPapelesRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      tomarPapelesLinea( alto , direccionActual , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso limpiarRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      limpiarLinea( alto , direccionActual , cantFlores , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso dejarFloresRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      dejarFloresLinea( alto , direccionActual , cantFlores )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso dejarPapelesRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      dejarPapelesLinea( alto , direccionActual , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso vaciarBolsaRectangulo(  E alto : numero ; E ancho : numero ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  variables
    AvInicial   : numero
    CaInicial   : numero
    lineaActual : numero
  comenzar
    AvInicial   := PosAv
    CaInicial   := PosCa
    lineaActual := 1
    repetir( ancho )
      vaciarBolsaLinea( alto , direccionActual , cantFlores , cantPapeles )
      BloquearEsquina( (AvInicial + lineaActual) , CaInicial )
      Pos( (AvInicial + lineaActual) , CaInicial )
      incrementar( lineaActual )
  fin

  proceso tomarFloresEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
        tomarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
  fin

  proceso tomarPapelesEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
        tomarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
  fin

  proceso limpiarEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 1 )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 3 )
        limpiarLinea( largo , direccionActual , cantFlores , cantPapeles )
        girar( direccionActual , 1 )
  fin

  proceso tomarFloresEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    repetir( escalones )
      tomarFloresEscalon( largo , SENTIDO_HORARIO , direccionActual , cantFlores )
      largo := ( largo + incrementar )
  fin

  proceso tomarPapelesEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      tomarPapelesEscalon( largo , SENTIDO_HORARIO , direccionActual , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso limpiarEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      limpiarEscalon( largo , SENTIDO_HORARIO , direccionActual , cantFlores , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso dejarFloresEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 3 )
        dejarFloresLinea( largo , direccionActual , cantFlores )
        girar( direccionActual , 1 )
  fin

  proceso dejarPapelesEscalon(  E largo : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    si( SENTIDO_HORARIO )
      repetir( largo )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
    sino
      repetir( largo )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 3 )
        dejarPapelesLinea( largo , direccionActual , cantPapeles )
        girar( direccionActual , 1 )
  fin

  proceso vaciarBolsaEscalon(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      vaciarBolsaLinea( largo , direccionActual , cantFlores , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso dejarPapelesEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      dejarPapelesEscalon( largo , SENTIDO_HORARIO , direccionActual , cantPapeles )
      largo := ( largo + incrementar )
  fin

  proceso dejarFloresEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero )
  comenzar
    repetir( escalones )
      dejarFloresEscalon( largo , SENTIDO_HORARIO , direccionActual , cantFlores )
      largo := ( largo + incrementar )
  fin

  proceso vaciarBolsaEscalera(  E largo : numero ; E escalones : numero ; E incrementar : numero ; E SENTIDO_HORARIO : boolean ; ES direccionActual : numero ; ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    repetir( escalones )
      vaciarBolsaLinea( largo , direccionActual , cantFlores , cantPapeles )
      largo := ( largo + incrementar )
  fin

areas
  oficina   : AreaP ( 1  , 5  , 1   , 5  )
  area1     : AreaP ( 1  , 3  , 100 , 3  )
  area2     : AreaP ( 1  , 4  , 100 , 4  )
  deposito  : AreaP ( 10 , 10 , 10  , 10 )

robots
  robot TFlorero
  variables
    cantFlores      : numero
    pasos           : numero
    AvAnterior      : numero
    CaAnterior      : numero
    direccionActual : numero
    TERMINE         : boolean
  comenzar
    cantFlores      := 0
    pasos           := 0
    direccionActual := 0
    TERMINE         := V
    girar( direccionActual , 1 )
    BloquearEsquina( PosAv , PosCa )
    repetir( 99 )
      si( (cantFlores = 10) | (pasos = 15) )
        AvAnterior := PosAv
        CaAnterior := PosCa
        BloquearEsquina( 10 , 10 )
        Pos( 10 , 10 )
        dejarFlores( cantFlores )
        EnviarMensaje( ~TERMINE , cosechador )
        Pos( AvAnterior , CaAnterior )
        LiberarEsquina( 10 , 10 )
        pasos := 0
      agarrarFlor( cantFlores )
      BloquearEsquina( (PosAv + 1) , PosCa )
      mover
      incrementar( pasos )
      LiberarEsquina( (PosAv - 1) , PosCa )
    agarrarFlor( cantFlores )
    EnviarMensaje( TERMINE , cosechador )
  fin

  robot TCosechador
  variables
    AvInicial         : numero
    CaInicial         : numero
    cantFlores        : numero
    cantRobots        : numero
    robotsFinalizados : numero
    TERMINE           : boolean
  comenzar
    AvInicial         := PosAv
    CaInicial         := PosCa
    cantFlores        := 0
    cantRobots        := 2
    robotsFinalizados := 0
    BloquearEsquina( AvInicial , CaInicial )
    mientras( robotsFinalizados < cantRobots )
      RecibirMensaje( TERMINE , * )
      si( TERMINE )
        incrementar( robotsFinalizados )
      sino
        BloquearEsquina( 10 , 10 )
        Pos( 10 , 10 )
        tomarFlores( cantFlores )
        Pos( AvInicial , CaInicial )
        LiberarEsquina( 10 , 10 )
    Informar( 'Total flores' , cantFlores )
  fin

variables
  cosechador : TCosechador
  florero1   : TFlorero
  florero2   : TFlorero

comenzar
  AsignarArea( cosechador , oficina   )
  AsignarArea( florero1   , area1     )
  AsignarArea( florero2   , area2     )
  AsignarArea( cosechador , deposito  )
  AsignarArea( florero1   , deposito  )
  AsignarArea( florero2   , deposito  )
  Iniciar( cosechador , 1 , 5 )
  Iniciar( florero1   , 1 , 3 )
  Iniciar( florero2   , 1 , 4 )
fin