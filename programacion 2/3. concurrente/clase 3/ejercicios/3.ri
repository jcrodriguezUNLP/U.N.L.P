programa ejer3
procesos
  proceso incrementar( ES x : numero )
  comenzar
    x := ( x + 1 )
  fin
  
  proceso girar( ES direccionActual : numero ; E giros : numero )
  comenzar
    repetir( giros )
      derecha
      si( direccionActual < 3 )
        incrementar( direccionActual )
      sino
        direccionActual := 0
  fin
  
  proceso reiniciarDireccion( ES direccionActual : numero )
  comenzar
    si( direccionActual <> 0 )
      girar( direccionActual , (4 - direccionActual) )
  fin
  
  proceso cambiarDireccion( ES direccionActual : numero ; E nuevaDireccion : numero )
  comenzar
    mientras( direccionActual <> nuevaDireccion )
      girar( direccionActual , 1 )
  fin
  
  proceso tomarFlores( ES cantFlores : numero )
  comenzar
    mientras( HayFlorEnLaEsquina )
      tomarFlor
      incrementar( cantFlores )
  fin
  
  proceso tomarPapeles( ES cantPapeles : numero )
  comenzar
    mientras( HayPapelEnLaEsquina )
      tomarPapel
      incrementar( cantPapeles )
  fin
  
  proceso limpiarEsquina( ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    tomarFlores  ( cantFlores  )
    tomarPapeles ( cantPapeles )
  fin
  
  proceso limpiarLinea( E largo : numero ; E FLORES : boolean ; ES cantFlores : numero ; E PAPELES : boolean ; ES cantPapeles : numero )
  comenzar
    si( FLORES & PAPELES )
      repetir( largo )
        limpiarEsquina( cantFlores , cantPapeles )
        mover
      limpiarEsquina( cantFlores , cantPapeles )
    sino
      si( FLORES )
        repetir( largo )
          tomarFlores( cantFlores )
          mover
        tomarFlores( cantFlores )
      sino
        repetir( largo )
          tomarPapeles( cantPapeles )
          mover
        tomarPapeles( cantPapeles )
  fin

  proceso limpiarEscalon( E largo : numero ; ES direccionActual : numero ; E SENTIDO_HORARIO : boolean ; E FLORES : boolean ; ES cantFlores : numero ; E PAPELES : boolean ; ES cantPapeles : numero ; ES escalonesMasFloresQPapeles : numero )
  variables
    floresEnEscalon : numero
    papelesEnEscalon : numero
  comenzar
    floresEnEscalon := cantFlores
    papelesEnEscalon := cantPapeles
    si( SENTIDO_HORARIO )
      repetir( 2 )
        limpiarLinea( largo , FLORES , cantFlores , PAPELES , cantPapeles )
        girar( direccionActual , 1 )
    sino
      repetir( 2 )
        limpiarLinea( largo , FLORES , cantFlores , PAPELES , cantPapeles )
        girar( direccionActual , 3 )
    girar( direccionActual , 2 )
    floresEnEscalon := ( cantFlores - floresEnEscalon )
    papelesEnEscalon := ( cantPapeles - papelesEnEscalon )
    si( papelesEnEscalon < floresEnEscalon )
      incrementar( escalonesMasFloresQPapeles )
  fin
  
  proceso limpiarEscalera( E escalones : numero ; E largo : numero ; E incremento : numero ; ES direccionActual : numero ; E SENTIDO_HORARIO : boolean ; E FLORES : boolean ; ES cantFlores : numero ; E PAPELES : boolean ; ES cantPapeles : numero )
  variables
    numEscalon : numero
    escalonesMasFloresQPapeles : numero
  comenzar
    numEscalon := 1
    escalonesMasFloresQPapeles := 0
    repetir( escalones )
      si( 1 < numEscalon )
        largo := ( largo + incremento )
      limpiarEscalon( largo , direccionActual , SENTIDO_HORARIO , FLORES , cantFlores , PAPELES , cantPapeles , escalonesMasFloresQPapeles )
      incrementar( numEscalon )
    EnviarMensaje(  escalonesMasFloresQPapeles , jefe )
  fin

areas
  ciudad: AreaC( 1 , 1 , 100 , 100 )

robots
  robot T1
  variables
    direccionActual : numero
    cantFlores  : numero
    cantPapeles : numero
  comenzar
    cantFlores  := 0
    cantPapeles := 0
    direccionActual := 0
    limpiarEscalera( 4 , 1 , 0 , direccionActual , V , V , cantFlores , V , cantPapeles )
  fin
  
  robot TJefe
  variables
    aux                            : numero
    cantEscalonesMasFloresQPapeles : numero
  comenzar
    cantEscalonesMasFloresQPapeles := 0
    repetir( 3 )
      RecibirMensaje( aux , * )
      cantEscalonesMasFloresQPapeles := ( cantEscalonesMasFloresQPapeles + aux )
    Informar( cantEscalonesMasFloresQPapeles )      
  fin

variables
  robot1 : T1
  robot2 : T1
  robot3 : T1
  jefe   : TJefe

comenzar
  AsignarArea( robot1 , ciudad )
  AsignarArea( robot2 , ciudad )
  AsignarArea( robot3 , ciudad )
  AsignarArea( jefe   , ciudad )
  Iniciar( robot1 , 2  , 1  )
  Iniciar( robot2 , 7  , 1  )
  Iniciar( robot3 , 12 , 1  )
  Iniciar( jefe   , 1  , 1  )
fin