programa ejer3
procesos
  proceso incrementar( ES x : numero )
  comenzar
    x := ( x + 1 )
  fin
  
  proceso girar( ES direccionActual : numero ; E giros : numero )
  comenzar
    repetir( giros )
      derecha
      si( direccionActual < 3 )
        incrementar( direccionActual )
      sino
        direccionActual := 0
  fin
  
  proceso reiniciarDireccion( ES direccionActual : numero )
  comenzar
    si( direccionActual <> 0 )
      girar( direccionActual , (4 - direccionActual) )
  fin
  
  proceso cambiarDireccion( ES direccionActual : numero ; E nuevaDireccion : numero )
  comenzar
    mientras( direccionActual <> nuevaDireccion )
      girar( direccionActual , 1 )
  fin
  
  proceso tomarFlores( ES cantFlores : numero )
  comenzar
    mientras( HayFlorEnLaEsquina )
      tomarFlor
      incrementar( cantFlores )
  fin
  
  proceso tomarPapeles( ES cantPapeles : numero )
  comenzar
    mientras( HayPapelEnLaEsquina )
      tomarPapel
      incrementar( cantPapeles )
  fin
  
  proceso limpiarEsquina( ES cantFlores : numero ; ES cantPapeles : numero )
  comenzar
    tomarFlores  ( cantFlores  )
    tomarPapeles ( cantPapeles )
  fin
  
  proceso limpiarLinea( E largo : numero ; E FLORES : boolean ; ES cantFlores : numero ; E PAPELES : boolean ; ES cantPapeles : numero )
  comenzar
    si( FLORES & PAPELES )
      repetir( largo )
        limpiarEsquina( cantFlores , cantPapeles )
        mover
      limpiarEsquina( cantFlores , cantPapeles )
    sino
      si( FLORES )
        repetir( largo )
          tomarFlores( cantFlores )
          mover
        tomarFlores( cantFlores )
      sino
        repetir( largo )
          tomarPapeles( cantPapeles )
          mover
        tomarPapeles( cantPapeles )
  fin

  proceso limpiarEscalon( E largo : numero ; ES direccionActual : numero ; E SENTIDO_HORARIO : boolean ; E FLORES : boolean ; ES cantFlores : numero ; E PAPELES : boolean ; ES cantPapeles : numero ; ES escalonesMasFloresQPapeles : numero )
  variables
    floresEnEscalon : numero
    papelesEnEscalon : numero
  comenzar
    floresEnEscalon := cantFlores
    papelesEnEscalon := cantPapeles
    si( SENTIDO_HORARIO )
      repetir( 2 )
        limpiarLinea( largo , FLORES , cantFlores , PAPELES , cantPapeles )
        girar( direccionActual , 1 )
    sino
      repetir( 2 )
        limpiarLinea( largo , FLORES , cantFlores , PAPELES , cantPapeles )
        girar( direccionActual , 3 )
    girar( direccionActual , 2 )
    floresEnEscalon := ( cantFlores - floresEnEscalon )
    papelesEnEscalon := ( cantPapeles - papelesEnEscalon )
    si( papelesEnEscalon < floresEnEscalon )
      incrementar( escalonesMasFloresQPapeles )
  fin
  
  proceso limpiarEscalera( E escalones : numero ; E largo : numero ; E incremento : numero ; ES direccionActual : numero ; E SENTIDO_HORARIO : boolean ; E FLORES : boolean ; ES cantFlores : numero ; E PAPELES : boolean ; ES cantPapeles : numero )
  variables
    numEscalon : numero
    escalonesMasFloresQPapeles : numero
  comenzar
    numEscalon := 1
    escalonesMasFloresQPapeles := 0
    repetir( escalones )
      si( 1 < numEscalon )
        largo := ( largo + incremento )
      limpiarEscalon( largo , direccionActual , SENTIDO_HORARIO , FLORES , cantFlores , PAPELES , cantPapeles , escalonesMasFloresQPapeles )
      incrementar( numEscalon )
    EnviarMensaje(  escalonesMasFloresQPapeles , jefe )
  fin

areas
  oficina      : AreaP  ( 1 , 1 , 1  , 1  )
  salaDeEspera : AreaPC ( 7 , 4 , 13 , 4  )
  region       : AreaPC ( 5 , 5 , 50 , 30 )

robots
  robot T1
  variables
    id           : numero
    Av           : numero
    Ca           : numero
    AvInicial    : numero
    CaInicial    : numero
    cantFlores   : numero
    cantPapeles  : numero
    TERMINAR     : boolean 
    CONFIRMACION : boolean
  comenzar
    cantFlores   := 0
    cantPapeles  := 0
    TERMINAR     := F
    CONFIRMACION := V
    AvInicial := PosAv
    CaInicial := PosCa
    RecibirMensaje( id , jefe )
    mientras( ~ TERMINAR )
      RecibirMensaje( TERMINAR , jefe )
      si( ~ TERMINAR ) 
        Random( Av , 5 , 50 )
        Random( Ca , 5 , 30 )
        Pos( Av ,Ca )
        limpiarEsquina( cantFlores , cantPapeles )
        Pos( AvInicial , CaInicial )
        EnviarMensaje( CONFIRMACION , jefe )
    EnviarMensaje( id                         , jefe )
    EnviarMensaje( (cantFlores + cantPapeles) , jefe )
  fin

  robot TJefe
  variables
    id           : numero
    aux          : numero
    idMax        : numero
    auxMax       : numero
    CONFIRMACION : boolean
    TERMINAR     : boolean
  comenzar
    TERMINAR := F
    auxMax   := ( -1 )
    id       := 1
    EnviarMensaje( 1 , robot1 )
    EnviarMensaje( 2 , robot2 )
    EnviarMensaje( 3 , robot3 )
    EnviarMensaje( 4 , robot4 )
    repetir( 20 )
      si( id = 4)
        EnviarMensaje( F  , robot4 )
        id := 1
      sino
        si( id = 1)
          EnviarMensaje( F  , robot1 )
        si( id = 2)
          EnviarMensaje( F  , robot2 )
        si( id = 3)
          EnviarMensaje( F  , robot3 )
        incrementar( id )
      RecibirMensaje( CONFIRMACION , * )
    TERMINAR := V
    EnviarMensaje( TERMINAR , robot1 )
    EnviarMensaje( TERMINAR , robot2 )
    EnviarMensaje( TERMINAR , robot3 )
    EnviarMensaje( TERMINAR , robot4 )
    repetir( 4 )
      RecibirMensaje( id  , * )
      RecibirMensaje( aux , * )
      si( auxMax < aux )
        auxMax := aux
        idMax  := id
    Informar( 'Robot'     ,  idMax  )      
    Informar( 'Elementos' , auxMax  )      
  fin

variables
  jefe   : TJefe
  robot1 : T1
  robot2 : T1
  robot3 : T1
  robot4 : T1

comenzar
  AsignarArea( jefe   , oficina      )
  AsignarArea( robot1 , salaDeEspera )
  AsignarArea( robot2 , salaDeEspera )
  AsignarArea( robot4 , salaDeEspera )
  AsignarArea( robot3 , salaDeEspera )
  AsignarArea( robot1 , region       )
  AsignarArea( robot2 , region       )
  AsignarArea( robot4 , region       )
  AsignarArea( robot3 , region       )
  Iniciar( jefe   , 1  , 1  )
  Iniciar( robot1 , 7  , 4  )
  Iniciar( robot2 , 9  , 4  )
  Iniciar( robot3 , 11 , 4  )
  Iniciar( robot4 , 13 , 4  )
fin
